/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uml1.Interface;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import uml1.Comissionado;
import uml1.Empregado;
import uml1.Gerente;

/**
 *
 * @author batista
 */
public class FrameListarEmpregado extends javax.swing.JFrame {

    /**
     * Creates new form ListarEmpregado
     */
    public FrameListarEmpregado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("RELATORIO EMPREGADOS");

        jPanel1.setPreferredSize(new java.awt.Dimension(754, 51));

        jComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Empregado", "Gerente", "Comissionado" }));
        jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActionPerformed(evt);
            }
        });
        jComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBoxKeyReleased(evt);
            }
        });

        jLabel1.setText("Nome:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addGap(47, 47, 47)
                .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jTextField1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(0, 7, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Cpf", "Salario", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setMinWidth(400);
            jTable.getColumnModel().getColumn(1).setMinWidth(100);
            jTable.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable.getColumnModel().getColumn(2).setMinWidth(75);
            jTable.getColumnModel().getColumn(2).setMaxWidth(75);
            jTable.getColumnModel().getColumn(3).setMinWidth(100);
            jTable.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxKeyReleased
        // TODO add your handling code here:

        JOptionPane.showMessageDialog(rootPane, "TESTE");


    }//GEN-LAST:event_jComboBoxKeyReleased

    private void jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxActionPerformed
        // TODO add your handling code here:
        String combo;

        if (jComboBox.getSelectedIndex() == 0) {
            //combo = (String) jComboBox.getSelectedItem();
            if (jTextField1.getText().length() == 0) {
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                while (model.getRowCount() > 0) {//Remove as linhas da tabela 
                    model.removeRow(0);
                }
                inserirEmpregado();
            } else {
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                while (model.getRowCount() > 0) {//Remove as linhas da tabela 
                    model.removeRow(0);
                }
                inserirPesquisaEmpregado();//atualiza tabela 
            }
        } else if (jComboBox.getSelectedIndex() == 1) {
            //combo = (String) jComboBox.getSelectedItem();
            //System.out.println(combo);
            if (jTextField1.getText().length() == 0) {
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                while (model.getRowCount() > 0) {//Remove as linhas da tabela 
                    model.removeRow(0);
                }
                inserirGerente();
            } else {
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                while (model.getRowCount() > 0) {//Remove as linhas da tabela 
                    model.removeRow(0);
                }
                inserirPesquisaGerente();//atualiza tabela 
            }
        } else if (jComboBox.getSelectedIndex() == 2) {
            //combo = (String) jComboBox.getSelectedItem();
            //System.out.println(combo);
            if (jTextField1.getText().length() == 0) {
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                while (model.getRowCount() > 0) {//Remove as linhas da tabela 
                    model.removeRow(0);
                }
                inserirComissionado();//Comi
            } else {
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                while (model.getRowCount() > 0) {//Remove as linhas da tabela 
                    model.removeRow(0);
                }
                inserirPesquisaComissionado();//atualiza tabela  comi
            }
        }
    }//GEN-LAST:event_jComboBoxActionPerformed

    public void inserirEmpregado() {
        setLocationRelativeTo(null);

        jTable.getColumnModel().getColumn(0).setHeaderValue("Nome");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(1).setHeaderValue("CPF");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(2).setHeaderValue("Salario");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(3).setHeaderValue("");//Colocar o titulo da coluna
        
        
        jTable.setCellSelectionEnabled(false);
        jTable.setRowSelectionAllowed(true);

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        ArrayList<Empregado> listaEmpregado = uml1.Controle.Controle.selectEmpregado();

        Object[] fila = new Object[model.getColumnCount()];
        for (int i = 0; i < listaEmpregado.size(); i++) {
            fila[0] = listaEmpregado.get(i).getNome();
            fila[1] = listaEmpregado.get(i).getCpf();
            fila[2] = listaEmpregado.get(i).getSalario();
            model.addRow(fila);
        }
    }

    public void inserirPesquisaEmpregado() {
        setLocationRelativeTo(null);

        jTable.getColumnModel().getColumn(0).setHeaderValue("Nome");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(1).setHeaderValue("CPF");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(2).setHeaderValue("Salario");//Colocar o titulo da coluna
        jTable.setCellSelectionEnabled(false);
        jTable.setRowSelectionAllowed(true);

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        ArrayList<Empregado> listaEmpregado = uml1.Controle.Controle.pesquisaEmpregado(jTextField1.getText().toUpperCase());

        Object[] fila = new Object[model.getColumnCount()];
        for (int i = 0; i < listaEmpregado.size(); i++) {
            fila[0] = listaEmpregado.get(i).getNome();
            fila[1] = listaEmpregado.get(i).getCpf();
            fila[2] = listaEmpregado.get(i).getSalario();
            model.addRow(fila);
        }
    }

    public void inserirGerente() {
        setLocationRelativeTo(null);

        jTable.getColumnModel().getColumn(0).setHeaderValue("Nome");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(1).setHeaderValue("CPF");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(2).setHeaderValue("Salario");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(3).setHeaderValue("Gratificação");//Colocar o titulo da coluna

        jTable.setCellSelectionEnabled(false);
        jTable.setRowSelectionAllowed(true);

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        ArrayList<Gerente> listaGerente = uml1.Controle.Controle.selectGerente();

        Object[] fila = new Object[model.getColumnCount()];
        for (int i = 0; i < listaGerente.size(); i++) {
            fila[0] = listaGerente.get(i).getNome();
            fila[1] = listaGerente.get(i).getCpf();
            fila[2] = listaGerente.get(i).getSalario();
            fila[3] = listaGerente.get(i).getGratificacao();
            model.addRow(fila);
        }
    }

    public void inserirPesquisaGerente() {
        setLocationRelativeTo(null);

        jTable.getColumnModel().getColumn(0).setHeaderValue("Nome");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(1).setHeaderValue("CPF");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(2).setHeaderValue("Salario");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(2).setHeaderValue("Gratificação");//Colocar o titulo da coluna

        jTable.setCellSelectionEnabled(false);
        jTable.setRowSelectionAllowed(true);

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        ArrayList<Gerente> listaGerente = uml1.Controle.Controle.pesquisaGerente(jTextField1.getText().toUpperCase());

        Object[] fila = new Object[model.getColumnCount()];
        for (int i = 0; i < listaGerente.size(); i++) {
            fila[0] = listaGerente.get(i).getNome();
            fila[1] = listaGerente.get(i).getCpf();
            fila[2] = listaGerente.get(i).getSalario();
            fila[3] = listaGerente.get(i).getGratificacao();
            model.addRow(fila);
        }
    }

    public void inserirComissionado() {
        setLocationRelativeTo(null);

        jTable.getColumnModel().getColumn(0).setHeaderValue("Nome");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(1).setHeaderValue("CPF");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(2).setHeaderValue("Salario");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(3).setHeaderValue("Percentual");//Colocar o titulo da coluna

        jTable.setCellSelectionEnabled(false);
        jTable.setRowSelectionAllowed(true);

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        ArrayList<Comissionado> listaComissionado = uml1.Controle.Controle.selectComissionado();

        Object[] fila = new Object[model.getColumnCount()];
        for (int i = 0; i < listaComissionado.size(); i++) {
            fila[0] = listaComissionado.get(i).getNome();
            fila[1] = listaComissionado.get(i).getCpf();
            fila[2] = listaComissionado.get(i).getSalario();
            fila[3] = listaComissionado.get(i).getPercentual();
            model.addRow(fila);
        }
    }

    public void inserirPesquisaComissionado() {
        setLocationRelativeTo(null);

        jTable.getColumnModel().getColumn(0).setHeaderValue("Nome");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(1).setHeaderValue("CPF");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(2).setHeaderValue("Salario");//Colocar o titulo da coluna
        jTable.getColumnModel().getColumn(3).setHeaderValue("Percentual");//Colocar o titulo da coluna

        jTable.setCellSelectionEnabled(false);
        jTable.setRowSelectionAllowed(true);

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        ArrayList<Comissionado> listaComissionado = uml1.Controle.Controle.pesquisaComissionado(jTextField1.getText().toUpperCase());

        Object[] fila = new Object[model.getColumnCount()];
        for (int i = 0; i < listaComissionado.size(); i++) {
            fila[0] = listaComissionado.get(i).getNome();
            fila[1] = listaComissionado.get(i).getCpf();
            fila[2] = listaComissionado.get(i).getSalario();
            fila[3] = listaComissionado.get(i).getPercentual();
            model.addRow(fila);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameListarEmpregado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameListarEmpregado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameListarEmpregado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameListarEmpregado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameListarEmpregado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
